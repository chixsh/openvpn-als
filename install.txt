Latest version of this guide can be found from

http://adito.wiki.sourceforge.net/installing_and_running_the_adito_server


=Getting Adito=

Latest official Adito releases can be found from 
http://sourceforge.net/project/showfiles.php?group_id=228294. If you 
want the latest development version, you need Subversion (SVN) client. 
If you're running Linux, you can probably install it with your 
distribution's package manager (e.g. synaptics, aptitude or yum). On 
Windows you need to download Subversion from

http://subversion.tigris.org/


Then, when Subversion is installed, you can get latest Adito version 
with the following command (from an UNIX shell/terminal or Windows 
command line prompt):

svn co https://adito.svn.sourceforge.net/svnroot/adito adito


Most of the time the development (svn) version of Adito should be just 
as stable as the official releases, so use that whenever possible.

=Building and installing Adito server=

==Generic instructions==

First install (Sun's) Java Development Kit (JDK) version 1.6 from from 
http://java.sun.com/javase/downloads/?intcmp=1281. If you use 
adito-0.9.0 download JDK 1.5 instead to avoid build problems. In Linux 
you can most likely install JDK with your package manager.

Due to Sun licensing restrictions we can't legally redistribute the 
tools.jar with Adito. For more information take a look at these links:

    * http://java.sun.com/j2se/1.5.0/README.html#redistribution
    * http://java.sun.com/javase/6/webnotes/README.html


To use Adito, you need to copy tools.jar from $JDK_HOME/lib to 
$ADITO_HOME/adito/lib. In Debian GNU/Linux distribution $JDK_HOME is 
most likely /usr/lib/jvm/java-6-sun. If you don't have tools.jar 
installed at all or are using a wrong version you won't be able to 
install or use Adito. When you've installed tools.jar you can proceed by 
building Adito:

    * Install Apache Ant 1.6.0 or higher (http://ant.apache.org). In 
Linux you can probably install Ant with you distribution's package 
manager.

    * Unpack the source code archive. In Linux do "tar -zxf 
adito-0.9.0.tar.gz". In Windows you should be able to unpack Adito by 
double clicking the ZIP-file. If you downloaded Adito from Subversion, 
you don't need to unpack anything.

    * Switch to root or administrator user. In Linux this is done with 
sudo -s or su. This is required only if you wan't Adito to run on port 
1024 or less. The default HTTPS port is 443, so you probably want this.

    * Issue "ant install". Note that you must run the 'install' target 
of the default build file at least once. This compiles everything and 
launches the install wizard. You may re-run this at any time.

    * Navigate to http://localhost:28080 with your browser and go 
through the install wizard. Ant will exit when the wizard is complete or 
is cancelled. You may abort the wizard at any time using your INTR key 
(usually CTRL+C).

    * Proceed to "Compiling Adito Agent". Otherwise all functionality 
depending on the Agent is broken.

Note that if you wish to install Adito as a Linux service, do the 
following:

    * Enter the adito directory (e.g. /opt/adito-0.9.0)

    * Switch to root user (e.g. with sudo -s or su). This is mandatory 
or you won't have write access to system directories.
    * Issue ant install-service

After that you should be able to stop Adito by doing

$ /etc/init.d/adito stop

and start it with

$ /etc/init.d/adito start

You can also issue "/etc/init.d/adito restart" to stop and then restart 
Adito server.

==Java in Debian/Ubuntu Linux==

If you have installed Java from Debian/Ubuntu packages various Java 
versions are installed to /usr/lib/jvm:

user@server:~$ ls -l /usr/lib/jvm/
total 12
drwxr-xr-x 7 root root 4096 2008-04-19 10:51 java-1.5.0-gcj-4.2-1.5.0.0
lrwxrwxrwx 1 root root 23 2008-03-26 13:43 java-1.5.0-sun -> 
java-1.5.0-sun-1.5.0.15
drwxr-xr-x 10 root root 4096 2008-03-26 13:43 java-1.5.0-sun-1.5.0.15
lrwxrwxrwx 1 root root 19 2008-04-18 11:20 java-6-sun -> 
java-6-sun-1.6.0.06
drwxr-xr-x 8 root root 4096 2008-04-18 11:20 java-6-sun-1.6.0.06
lrwxrwxrwx 1 root root 26 2008-04-19 10:51 java-gcj -> 
java-1.5.0-gcj-4.2-1.5.0.0

In this case (on Ubuntu 8.04) we would do a

user@server:~$ export JAVA_HOME=/usr/lib/jvm/java-1.5.0-sun

Make sure that you use the generic names like java-6-sun or 
java-1.5.0-sun instead of the more specific build names. Otherwise the 
varibale will be invalid when a new version of the Java package becomes 
available.

Debian and Ubuntu use the alternatives system to manage multiple program 
versions. You can verify that you're using the correct javac and ant 
binaries like this:

user@server:~$ which javac
/usr/bin/javac
user@server:~$ ls -l /usr/bin/javac
lrwxrwxrwx 1 root root 23 2008-03-26 13:47 /usr/bin/javac -> 
/etc/alternatives/javac
user@server:~$ ls -l /etc/alternatives/javac
lrwxrwxrwx 1 root root 37 2008-05-17 19:47 /etc/alternatives/javac -> 
/usr/lib/jvm/java-1.5.0-sun/bin/javac

You change the links (alternatives) manually with ln -s but in most 
cases it's better and easier to use galternatives-program for the job. 
You can install it with aptitude install galternatives.

==Troubleshooting Adito install==

In most cases the above instructions should work. If you have trouble 
building adito, you can try the following:

    * Make sure that you have installed Java Development Kit (JDK) 
rather than Java Runtime Environment (JRE). Otherwise you will not be 
able to execute the ant scripts as the Java compiler will not be 
available.
    * Make sure that JAVA_HOME points to a valid JRE/JDK: export 
JAVA_HOME=/path/to/your/jdk.
    * Make sure that ANT_HOME is set and that you're using the correct 
ant executable.
    * Check that the actual javac executable is for the correct Java 
version (1.6 for svn, 1.5 for Adito 0.9.0).
    * If you're running Adito 0.9.0, use Sun's JDK 1.5.
    * If you're running SVN version of Adito, use Sun's JDK 1.6.


=Compiling the Adito Agent=

Because the agent is designed to work with any version of Java and the 
agent launcher must be a signed applet, there are additional 
requirements before you can build your own versions of the VPN client. 
Note that with Adito compiling your own Agent is currently mandatory.

==Configuring the certificate==

1. Change directory to 'certificate' found in the directory where this 
document exists. For example, if running on a Unix like platform and you 
have extracted version 0.9.0 of Adito into /opt, you would use:

$ cd /opt/adito-0.9.0/certificate

and in Windows:

c:\>cd adito-0.9.0\certificate

2. Generate your private key. This assumes the JDK's keytool is 
somewhere on your path. See ked'
click on button 'environment variables'
Change the 'system variable' , 'path'
Append the c:\ant\bin. For example :
%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;c:\ant\bin

2. Change directory to 'adito' found in the directory where this 
document exists. For example, if running on a Unix like platform and you 
have extracted version 0.9.0 of Adito into /opt, you would use:

$ cd /opt/adito-0.9.0/adito
$ ant install-agent

in Windows:

c:\>cd adito-0.9.0\adito
c:\adito-0.9.0\adito>ant install-agent

This will build the agent source, create the libraries and copy them to 
the appropriate place in the Adito web application ready for use. If 
Adito is running you may have to restart it.

If you wish to build the agent but not install it, you would use 
something like:

$ cd /opt/adito-0.9.0/adito-agent
$ ant build

in windows

c:\>cd adito-0.9.0\adito-agent
c:\adito-0.9.0\adito>ant build

=Starting and stopping the Adito server=

Once you have built the Adito server and Adito Agent, you can start it 
with "ant start". For example, in Linux:

$ cd /opt/adito-0.9.0
$ ant start
 
--- LOTS OF INPUT BEFORE THIS LINE ---
 
start:
[chmod] Skipping fileset for directory 
/opt/adito-0.9.1/adito/install/platforms/linux. It is empty.
[exec] Missing or invalid location in wrapper.java.library.path.1. 
Wrapper executable cannot be found
[exec] Result: 1
[echo] Adito started
 
BUILD SUCCESSFUL
Total time: 37 seconds

If the "build" was successful, you should be able to enter Adito login 
screen with a standard www-browser (e.g. Firefox). You can stop Adito 
similarly with "ant stop".

NOTE: Adito login screen is NOT located at the same address as the 
installation wizard. If you have configured Adito to listen to standard 
HTTPS port (443) then you can login to Adito from

https://localhost

If you selected a non-standard HTTPS port you need to define the port 
after the address, e.g.

https://localhost:8443

=Troubleshooting Adito startup=

==Checking if Adito is listening to the configured port==

To see if Adito is actually running, you can use "netstat" on both Linux 
and Windows. On Linux, issue

user@server:/opt/adito$ netstat -an|grep LISTEN|grep 8443
tcp6 0 0 127.0.0.1:8443 :::* LISTEN

Replace the 8443 with the TCP port number Adito was configured to listen 
on. In this case Adito is running correctly on port 8443. See man 
netstat for more information. If you get no output, then Adito is not 
running.

On most Windows OS'es you can use

netstat -an

from within a MS-DOS prompt. For a complete reference of the Windows 
netstat command see

http://technet.microsoft.com/en-us/library/bb490947(TechNet.10).aspx

==Problems with Java and Adito wrapper==

Sometimes Adito simply refuses to start with "ant start" or 
"/etc/init.d/adito start". Unfortunately un/jre/bin/java
wrapper.working.dir=/opt/adito/adito
wrapper.java.library.path.1=/opt/adito/adito/install/platforms/linux/x86

If you run into wrapper problems you probably have to modify them to 
suit your environment.
