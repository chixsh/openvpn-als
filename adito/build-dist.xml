<?xml version="1.0" encoding="UTF-8"?>
<project name="adito" default="start">

	<!-- Options for running Adito -->
	<property name="adito.conf" value="${basedir}/conf" />

	<!-- Location of tools.jar (Java compiler) -->
	<property name="tools.jar" value="lib/tools.jar" />

	<!-- Location of the JDK's tools.jar -->
	<property name="tools.jar.jdk" location="${java.home}/../lib/tools.jar" />

	<!-- Ant Contrib is required -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${dir.build-tools}/ant/ant-contrib.jar" />
		</classpath>
	</taskdef>

	<!-- Run the default Adito server in the foreground -->
	<target name="console" depends="check-tools,check-permissions">
		<!-- Launch on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="console" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
					<env key="PIDDIR" value="${basedir}/adito/tmp" />
				</exec>
			</then>
			<else>
				<!-- Launch on Windows -->
				<if>
					<os family="windows" />
					<then>
						<exec executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-c" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>
							Service wrapper not currently supported on this platform (${os.name}), so falling back to 
							generic method. You will not have restart ability from the user interface and
							beware of using CTRL+C, it may leave processes running
						</echo>
						<antcall target="start-using-java" />
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Launch using Java (avoids wrapper) -->
	<!-- This target tested and works at least on Gentoo Linux with Sun JDK 1.6. -matt 10.8.2008 -->
	<target name="start-using-java" depends="check-tools">
		<java fork="true" classname="com.adito.boot.Bootstrap">
			<classpath>
				<pathelement path="${build.boot.output}" />
			</classpath>
			<arg value="--conf=${adito.conf}" />
		</java>
	</target>


	<!-- Start the default Adito server in the background -->
	<!-- Removed dependencies on compile and deployment targets, which are called in the "install" target -->
	<target name="start" depends="check-tools, check-permissions">
		<!-- Launch on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="start" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
				<echo>Adito started</echo>
			</then>
			<else>
				<!-- Launch on Windows -->
				<if>
					<os family="windows" />
					<then>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-c" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Adito started</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>
							Service wrapper not currently supported on this platform (${os.name}), so falling back to 
							generic method. You will not have restart ability from the user interface and
							beware of using CTRL+C, it may leave processes running
						</echo>
						<java spawn="true" fork="true" classname="com.adito.boot.Bootstrap">
							<classpath>
								<pathelement path="${build.boot.output}" />
							</classpath>
							<arg value="--conf=${adito.conf}" />
						</java>
						<echo>Adito started</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Stop tun running Adito server -->
	<target name="stop" depends="check-permissions">
		<!-- Stop on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="stop" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
			</then>
			<else>
				<antcall target="stop-using-signal" />
			</else>
		</if>
	</target>

	<!-- Stop the running Adito using signal via run file -->
	<target name="stop-using-signal">
		<echo file="tmp/server.run">shutdown</echo>
		<echo>Shutdown signal sent. This may take a few seconds to take effect.</echo>
	</target>

	<!-- Restart the running Adito server -->
	<target name="restart" depends="check-permissions">
		<!-- Restart on Linux -->
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<exec executable="${basedir}/install/platforms/linux/adito">
					<arg value="restart" />
					<env key="WRAPPER_CONF" value="${adito.conf}/wrapper.conf" />
				</exec>
			</then>
			<else>
				<if>
					<os family="windows" />
					<then>
						<echo file="tmp/server.run">restart</echo>
						<echo>Restart signal sent. This may take a few seconds to take effect.</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo>Restart not implemented on this platform</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Copy wrapper.conf.example to wrapper.conf if wrapper.conf does not exist -->
	<target name="check-wrapper-conf">
		<echo>Checking if wrapper.conf exists and copying it to place</echo>
		<copy failonerror="false" file="${adito.conf}/wrapper.conf.example" tofile="${adito.conf}/wrapper.conf" />
	</target>

	<!-- Start the install wizard  -->
	<target name="install" depends="check-wrapper-conf,check-tools">

		<!-- Just in case -->
		<mkdir dir="logs" />
		<mkdir dir="tmp" />

		<java fork="true" classname="com.adito.boot.Bootstrap">
			<arg value="--install" />
			<classpath>
				<pathelement path="${build.boot.output}" />
			</classpath>
			<arg value="--conf=${adito.conf}" />
		</java>
	</target>


	<!-- Install Adito as a service  -->
	<target name="install-service" depends="check-wrapper-conf,check-tools,check-permissions">
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<!-- Install on Linux -->
				<echo>Installing Adito as Linux service</echo>
				<exec executable="${basedir}/install/platforms/linux/install-service">
					<arg value="-j" />
					<arg value="${java.home}" />
				</exec>
				<echo>Adito installed as Linux service</echo>
			</then>
			<else>
				<!-- Install on Windows -->
				<if>
					<os family="windows" />
					<then>
						<!-- Install on Linux -->
						<echo>Installing Adito as Windows service</echo>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-i" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Adito installed as Windows service</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo level="error">
							Service wrapper not currently supported on this platform (${os.name}), service cannot be installed.
						</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Uninstall Adito as a services  -->
	<target name="uninstall-service" depends="check-permissions">
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<!-- Install on Linux -->
				<echo>Uninstalling Adito Linux service</echo>
				<exec executable="${basedir}/install/platforms/linux/install-service">
					<arg value="-u" />
				</exec>
				<echo>Uinstalled Adito Linux service</echo>
			</then>
			<else>
				<!-- Install on Windows -->
				<if>
					<os family="windows" />
					<then>
						<!-- Install on Linux -->
						<echo>Uinstallign Adito Windows service</echo>
						<exec spawn="true" executable="${basedir}/install/platforms/windows/wrapper">
							<arg value="-r" />
							<arg value="../../../${adito.conf}/wrapper.conf" />
							<arg value="wrapper.working.dir=../../.." />
							<arg value="wrapper.java.library.path.1=install/platforms/windows" />
						</exec>
						<echo>Uinstalled Adito Windows server</echo>
					</then>
					<else>
						<!-- Fall back to manually executing -->
						<echo level="error">
							Service wrapper not currently supported on this platform (${os.name}), service cannot be uninstalled.
						</echo>
					</else>
				</if>
			</else>
		</if>
	</target>

	<!-- Test that tools.jar exists. Adito won't launch without it -->
        <target name="check-tools">
		<if>
			<!-- Check if a tools.jar is available already in $ADITO_HOME/adito/lib -->
			<not>
				<available file="${tools.jar}"/>
			</not>

			<!-- Was not available, copy it from JDK's lib directory -->
			<then>
				<echo message="Couldn't find tools.jar from $ADITO_HOME/adito/lib"/>

			<!-- Was not available, copy it from JDK's lib directory. Fail on error. -->
			 	<echo message="Copying the tools.jar from your JDK"/>

				<fail message="Could not find tools.jar from your JDK. Check your JAVA_HOME environment variable. It should point to your JDK's root directory.">
					<condition>
						<not>
							<available file="${tools.jar.jdk}"/>
						</not>
					</condition>
				</fail>

				<copy todir="${dir.lib}" file="${tools.jar.jdk}" failonerror="True"/>
			</then>
		</if>
        </target>

	<!-- Fix binary executable permissions -->
	<target name="check-permissions">
		<if>
			<equals arg1="${os.name}" arg2="Linux" />
			<then>
				<chmod perm="a+x" type="file" file="install/platforms/linux/adito" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/x86/wrapper" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/x86-64/wrapper" />
				<chmod perm="a+x" type="file" file="install/platforms/linux/install-service" />
			</then>
		</if>
	</target>


</project>

