<?xml version="1.0" encoding="UTF-8"?>

<project default="jar" name="commons-vfs" basedir=".">

    <!-- Load global properties -->
    <property file="../build.properties" />

    <path id="build.classpath">
		<pathelement path="${dir.maverick-util.classes}"/>
        <fileset dir="${dir.lib}">
            <include name="**/*.jar">
            </include>
        </fileset>
    </path>
    <target name="init" description="o Initializes some properties">
        <mkdir dir="${dir.lib}">
        </mkdir>
        <condition property="noget">
            <equals arg2="only" arg1="${build.sysclasspath}">
            </equals>
        </condition>
        <!--Test if JUNIT is present in ANT classpath-->

        <available property="Junit.present" classname="junit.framework.Test">
        </available>
    </target>
    <target name="compile" description="o Compile the code">
        <mkdir dir="${dir.build.classes}">
        </mkdir>
        <javac source="1.2" target="1.2" destdir="${dir.build.classes}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
            <src>
                <pathelement location="src/java">
                </pathelement>
            </src>
            <classpath refid="build.classpath">
            </classpath>
        </javac>
        <copy todir="${dir.build.classes}">
            <fileset dir="src/java">
                <include name="**/*.properties">
                </include>
                <include name="**/*.xml">
                </include>
            </fileset>
        </copy>
        <mkdir dir="${dir.build.classes}/META-INF">
        </mkdir>
        <copy todir="${dir.build.classes}/META-INF">
            <fileset dir=".">
                <include name="NOTICE.txt">
                </include>
            </fileset>
        </copy>
    </target>
	
    <target name="jar" description="o Create the jar" depends="compile,test">
        <mkdir dir="${dir.build.dist}"/>
        <jar jarfile="${dir.build.dist}/${final.name}.jar" excludes="**/package.html" basedir="${dir.build.classes}">
        </jar>
        <copy todir="${dir.build.dist}">
            <fileset dir="${dir.lib}">
                <include name="jcifs*.jar">
                </include>
            </fileset>
        </copy>
    </target>
    <target name="clean" description="Clean up the generated directories">
        <delete>
            <fileset dir="${dir.build}"/>
	</delete>
    </target>
    <target name="dist" description="o Create a distribution" depends="jar, javadoc">
        <mkdir dir="dist">
        </mkdir>
        <copy todir="dist">
            <fileset dir="${basedir}" includes="LICENSE*, README*">
            </fileset>
        </copy>
    </target>
    <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
        <fail message="There were test failures.">
        </fail>
    </target>
    <target name="internal-test" if="Junit.present" depends="junit-present,compile-tests">
        <mkdir dir="${dir.test.reports}">
        </mkdir>
        <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
            <sysproperty key="basedir" value=".">
            </sysproperty>
            <formatter type="xml">
            </formatter>
            <formatter usefile="false" type="plain">
            </formatter>
            <classpath>
                <path refid="build.classpath">
                </path>
                <pathelement path="${dir.build.classes}">
                </pathelement>
                <pathelement path="${dir.build.classes}">
                </pathelement>
            </classpath>
            <batchtest todir="${dir.test.reports}">
                <fileset dir="src/test">
                    <include name="**/test/*TestCase.java">
                    </include>
                    <exclude name="**/test/Abstract*TestCase.java">
                    </exclude>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="junit-present" unless="Junit.present" depends="init">
        <echo>================================= WARNING ================================</echo>
        <echo>Junit isn't present in your ${ANT_HOME}/lib directory. Tests not executed.</echo>
        <echo>==========================================================================</echo>
    </target>
    <target name="compile-tests" if="Junit.present" depends="junit-present,compile">
        <mkdir dir="${dir.build.classes}">
        </mkdir>
        <javac source="1.2" target="1.2" destdir="${dir.build.classes}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
            <src>
                <pathelement location="src/test">
                </pathelement>
            </src>
            <classpath>
                <path refid="build.classpath">
                </path>
                <pathelement path="${dir.build.classes}">
                </pathelement>
            </classpath>
        </javac>
    </target>
    <target name="javadoc" description="o Generate javadoc">
        <mkdir dir="${dir.build.docs.api}">
        </mkdir>
        <tstamp>
            <format pattern="2002-yyyy" property="year">
            </format>
        </tstamp>
        <property name="copyright" value="Copyright &amp;copy;  The Apache Software Foundation. All Rights Reserved.">
        </property>
        <property name="title" value="Commons VFS 1.0-RC6 API">
        </property>
        <javadoc use="true" private="true" destdir="${dir.build.docs.api}" author="true" version="true" sourcepath="src/java"
                 packagenames="org.apache.commons.vfs.*">
            <classpath>
                <path refid="build.classpath">
                </path>
            </classpath>
        </javadoc>
    </target>
    <target name="get-deps" unless="noget" depends="init">
        <!--Proxy settings works only with a JDK 1.2 and higher.-->

        <setproxy>
        </setproxy>
        <get dest="${dir.lib}/ant-1.6.2.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/ant/jars/ant-1.6.2.jar">
        </get>
        <get dest="${dir.lib}/commons-net-1.4.1.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/commons-net/jars/commons-net-1.4.1.jar">
        </get>
        <get dest="${dir.lib}/commons-logging-1.0.4.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/commons-logging/jars/commons-logging-1.0.4.jar">
        </get>
        <get dest="${dir.lib}/commons-compress-20050911.jar" usetimestamp="true" ignoreerrors="true"
             src="http://cvs.apache.org/repository/commons-compress/jars/commons-compress-SNAPSHOT.jar">
        </get>
        <get dest="${dir.lib}/commons-collections-3.1.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/commons-collections/jars/commons-collections-3.1.jar">
        </get>
        <get dest="${dir.lib}/jcifs-1.2.13.jar" usetimestamp="true" ignoreerrors="true"
             src="http://jcifs.samba.org/src/jcifs-1.2.13.jar">
        </get>
        <get dest="${dir.lib}/jakarta-slide-webdavlib-20050629.161100.jar" usetimestamp="true" ignoreerrors="true"
             src="http://cvs.apache.org/repository/slide/jars/jakarta-slide-webdavlib-20050629.161100.jar">
        </get>
        <get dest="${dir.lib}/jdom-1.0.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/jdom/jars/jdom-1.0.jar">
        </get>
        <get dest="${dir.lib}/commons-httpclient-2.0.2.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/commons-httpclient/jars/commons-httpclient-2.0.2.jar">
        </get>
        <get dest="${dir.lib}/jsch-0.1.23.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/com.jcraft/jars/jsch-0.1.23.jar">
        </get>
        <get dest="${dir.lib}/xml-apis-1.0.b2.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-1.0.b2.jar">
        </get>
        <get dest="${dir.lib}/oro-2.0.8.jar" usetimestamp="true" ignoreerrors="true"
             src="http://www.ibiblio.org/maven/oro/jars/oro-2.0.8.jar">
        </get>
    </target>
    <target name="install-maven">
        <get dest="${user.home}/maven-install-latest.jar" usetimestamp="true"
             src="${repo}/maven/maven-install-latest.jar">
        </get>
        <unjar dest="${maven.home}" src="${user.home}/maven-install-latest.jar">
        </unjar>
    </target>
</project>
