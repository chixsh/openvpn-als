<?xml version="1.0" encoding="UTF-8"?>
<project name="adito-sample" default="dist">
	<property file="build.properties" />
	<property file="${user.home}/.3sp.build.properties" />
	
	
	<!-- Standard build locations -->
	<property name="build.dir" value="build" />
	<property name="build.lib" value="lib" />
	<property name="build.output" value="${build.dir}/classes" />
	<property name="build.extension" value="${build.dir}/extension" />
	<property name="build.release" value="${build.dir}/release" />
	<property name="build.dist" value="${build.dir}/dist" />
	<property name="build.src" value="src" />
		
	<!-- Dependencies -->
			
	<property name="adito.home" value="../adito"/>
	<property name="adito.boot.classes" value="${adito.home}/build/boot"/>
	<property name="adito.server.classes" value="${adito.home}/build/server"/>
	<property name="adito.webapp.classes" value="${adito.home}/build/webapp"/>
	<property name="adito-enterprise-core.home" value="../adito-enterprise-core"/>
	<property name="adito-enterprise-core.classes" value="${adito-enterprise-core.home}/build/classes"/>
	
	<!-- Clean -->
	<target name="clean-dist" depends="clean,dist" />

	<!-- Additional required tasks -->
		
    <taskdef name="obfuscate" classname="com.yworks.yguard.ObfuscatorTask" 
    	classpath="${yguard.home}/lib/yguard.jar" />
    	
	<!-- Obfuscate and create the extension archive -->
	<target name="release" depends="clean,dist">
		<mkdir dir="${build.extension}"/>
		<mkdir dir="${build.extension}/private"/>
		<copy todir="${build.extension}">
			<fileset dir="extensions/${ant.project.name}">
				<include name="**/*"/>
				<exclude name="**/CVS/**/*"/>
			</fileset>
			<fileset dir="${basedir}">
				<include name="webapp/**/*"/>
				<exclude name="**/CVS/**/*"/>
			</fileset>
		</copy>
		<obfuscate logfile="obfuscation-log.xml" conservemanifest="true" replaceclassnamestrings="true">
			<property name="language-conformity" value="compatible"/>
			<expose>
				<class classes="protected"
						methods="protected"
						fields="protected"/>
			</expose>
			<inoutpair in="${build.dist}/${ant.project.name}.jar" out="${build.extension}/private/${ant.project.name}.jar"/>
		    <externalclasses>
				<pathelement path="${adito.boot.classes}"/>
				<pathelement path="${adito.server.classes}"/>
			   	<pathelement path="${adito.webapp.classes}"/>
			   	<pathelement path="${adito-enterprise-core.classes}"/>
				<fileset dir="${adito.home}/lib">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${adito.home}/webapp/WEB-INF/lib">
					<include name="*.jar"/>
				</fileset>
		    </externalclasses>
		</obfuscate>

		<!-- Create the archive -->
		<mkdir dir="${build.release}"/>
		<zip destfile="${build.release}/${ant.project.name}.zip">
			<zipfileset dir="${build.extension}" prefix="${ant.project.name}">
				<include name="**/*"/>
			</zipfileset>
		</zip>
		
		<!-- Generate checksums -->
		<checksum>
			<fileset dir="${build.release}">
				<include name="*.zip"/>
			</fileset>
		</checksum>
	</target>
	
	<!-- Build the library jar files -->
	<target name="dist" depends="compile">
		<mkdir dir="${build.dist}" />
		<jar jarfile="${build.dist}/${ant.project.name}.jar">
			<fileset dir="${build.output}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>
	
	<!-- Compile the extension  -->
	<target name="compile">
		<mkdir dir="${build.output}" />
		<javac destdir="${build.output}" srcdir="${build.src}" 
			   includeantruntime="false" includes="**/*.java">
            <classpath>
            	<pathelement path="${adito.boot.classes}"/>
            	<pathelement path="${adito.server.classes}"/>
               	<pathelement path="${adito.webapp.classes}"/>
			   	<pathelement path="${adito-enterprise-core.classes}"/>
            	<fileset dir="${adito.home}/lib">
            		<include name="*.jar"/>
            	</fileset>
            	<fileset dir="${adito.home}/webapp/WEB-INF/lib">
            		<include name="*.jar"/>
            	</fileset>
			</classpath>
		</javac>
		<copy todir="${build.output}">
			<fileset dir="${build.src}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>

	<!-- Clean up all built files -->

	<target name="clean">
		<delete>
			<fileset dir="${build.output}" />
			<fileset dir="${build.dist}" />
			<fileset dir="${build.release}" />
			<fileset dir="${build.extension}" />
		</delete>
	</target>

	<!-- Create API documentation -->

	<target name="javadoc">
		<mkdir dir="${build.docs}/api" />
		<javadoc sourcepath="src" defaultexcludes="yes" destdir="${build.docs}/api" author="true" version="true" use="true" windowtitle="Maverick Crypto" notree="true">
			<doctitle>
				<![CDATA[<h1>Adito Enterprise Secure Node</h1>
					 <br>
                     <p>Adds Secure Node capability.</p>]]>
			</doctitle>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2003-2006 3SP LTD. All Rights Reserved.</i>]]>
			</bottom>
			<packageset dir="src" defaultexcludes="yes">
				<include name="com/adito/sample/**" />
			</packageset>
		</javadoc>
	</target>


</project>
