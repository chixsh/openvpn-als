<assembly>
	<id>extension</id>
	<formats>
		<format>zip</format>
	</formats>

	<!-- We could remove the module name  (e.g. "unix") from the path by setting this to false -->
	<includeBaseDirectory>true</includeBaseDirectory>

	<!-- We can't use absolute paths in <file> or <fileset>. For example,
	     "${project.basedir}/webapp/WEB-INF/something" will cause files
	     in the assembly to have paths similar to this:

		unix/home/samuli/opt/adito/adito/branches/nonembedded/unix/src/resources/extension.xml

	     Obviously this is not acceptable, so we use relative paths (directly) above ${project.basedir},
	     for example "webapp/WEB-INF/something". A partial solution to this would be to define
	     each file individually (with <file>) and relocate it, but that would make reuse of this
	     assembly descriptor harder.
	-->

	<!-- Each directory has to be defined in it's own fileset -->
	<fileSets>
		<fileSet>
			<directory>private</directory>
		</fileSet>
		<fileSet>
			<directory>webapp</directory>
		</fileSet>
		<fileSet>
			<directory>upgrade</directory>
		</fileSet>
	</fileSets>

	<!-- Unlike <fileset>, <file> tag supports relocating a file. This is necessary
	     to put the extension jar into the correct place in the assembly -->
	<files>
		<!-- Include the previously created JAR in the extension archive -->
		<file>
			<source>target/${project.name}.jar</source>
			<outputDirectory>private</outputDirectory>
		</file>

		<!-- Include the ALS-specific extension descriptor at the root directory -->
		<file>
			<source>extension.xml</source>
		</file>
	</files>
</assembly>
