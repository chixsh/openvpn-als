<?xml version="1.0" encoding="UTF-8"?>
<project name="ovpnals-community-pam" default="dist">
	<property file="build.properties" />
	
	
	<!-- Standard build locations -->
	<property name="build.dir" value="build" />
	<property name="build.lib" value="lib" />
	<property name="build.output" value="${build.dir}/classes" />
	<property name="build.extension" value="${build.dir}/extension" />
	<property name="build.release" value="${build.dir}/release" />
	<property name="build.dist" value="${build.dir}/dist" />
	<property name="build.src" value="src" />
		
	<!-- Dependencies -->
			
	<property name="ovpnals.home" value="../ovpnals"/>
	<property name="ovpnals.boot.classes" value="${ovpnals.home}/build/boot"/>
	<property name="ovpnals.server.classes" value="${ovpnals.home}/build/server"/>
	<property name="ovpnals.webapp.classes" value="${ovpnals.home}/build/webapp"/>
	<property name="maverick-crypto.home" value="../maverick-crypto"/>
	<property name="maverick-crypto.classes" value="${maverick-crypto.home}/build/classes"/>
	<property name="maverick-ssl.home" value="../maverick-ssl"/>
	<property name="maverick-ssl.classes" value="${maverick-ssl.home}/build/classes"/>
	
	<!-- Environment -->
	
	
	<!-- Clean -->
	<target name="clean-dist" depends="clean,dist" />
    	
	<!-- Create the extension archive -->
	<target name="release" depends="clean,dist">
		<mkdir dir="${build.extension}"/>
		<mkdir dir="${build.extension}/private"/>
		<copy todir="${build.extension}">
			<fileset dir="extensions/${ant.project.name}">
				<include name="**/*"/>
				<exclude name="**/CVS/**/*"/>
			</fileset>
			<fileset dir="${basedir}">
				<include name="webapp/**/*"/>
				<exclude name="**/CVS/**/*"/>
			</fileset>
		</copy>
		<copy file="${build.dist}/${ant.project.name}.jar" tofile="${build.extension}/private/${ant.project.name}.jar"/>
		<copy todir="${build.extension}/private">
			<fileset dir="${build.lib}">
				<include name="*.jar"/>
			</fileset>
		</copy>
		
		<!-- Create the archive -->
		<mkdir dir="${build.release}"/>
		<zip destfile="${build.release}/${ant.project.name}.zip">
			<zipfileset dir="${build.extension}" prefix="${ant.project.name}">
				<include name="**/*"/>
			</zipfileset>
		</zip>
		
		<!-- Generate checksums -->
		<checksum>
			<fileset dir="${build.release}">
				<include name="*.zip"/>
			</fileset>
		</checksum>
	</target>
	
	<!-- Build the library jar files -->
	<target name="dist" depends="compile">
		<mkdir dir="${build.dist}" />
		<jar jarfile="${build.dist}/${ant.project.name}.jar">
			<fileset dir="${build.output}">
				<include name="**/*" />
			</fileset>
		</jar>
	</target>
	
	<!-- Compile the extension  -->
	<target name="compile" depends="compile-ovpnals">
		<mkdir dir="${build.output}" />
		<javac destdir="${build.output}" srcdir="${build.src}" 
			   includeantruntime="false" includes="**/*.java">
            <classpath>
            	<pathelement path="${ovpnals.boot.classes}"/>
            	<pathelement path="${ovpnals.server.classes}"/>
               	<pathelement path="${ovpnals.webapp.classes}"/>
            	<pathelement path="${maverick-ssl.classes}"/>
            	<pathelement path="${maverick-crypto.classes}"/>
            	<fileset dir="${build.lib}">
            		<include name="*.jar" />
            	</fileset>
            	<fileset dir="${ovpnals.home}/lib">
            		<include name="*.jar"/>
            	</fileset>
            	<fileset dir="${ovpnals.home}/webapp/WEB-INF/lib">
            		<include name="*.jar"/>
            	</fileset>
			</classpath>
		</javac>
		<copy todir="${build.output}">
			<fileset dir="${build.src}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile-ovpnals">
		<ant inheritall="false" dir="${ovpnals.home}" target="compile" />
	</target>

	<!-- Clean up all built files -->

	<target name="clean">
		<delete dir="${build.output}" />
		<delete dir="${build.dist}" />
		<delete dir="${build.release}" />
		<delete dir="${build.extension}" />
	</target>

	<!-- Create API documentation -->

	<target name="javadoc">
		<mkdir dir="${build.docs}/api" />
		<javadoc sourcepath="src" defaultexcludes="yes" destdir="${build.docs}/api" author="true" version="true" use="true" windowtitle="Maverick Crypto" notree="true">
			<doctitle>
				<![CDATA[<h1>OpenVPN-ALS PAM User Database</h1>
					 <br>
                     <p>Adds PAM User database capabilities.</p>]]>
			</doctitle>
			<bottom>
				<![CDATA[<i>Copyright &#169; 2003-2007 3SP LTD. All Rights Reserved.</i>]]>
			</bottom>
			<packageset dir="src" defaultexcludes="yes">
				<include name="com/ovpnals/dynamicdns/**" />
			</packageset>
		</javadoc>
	</target>
	
	<target name="install" depends="release">
		<copy file="${build.release}/${ant.project.name}.zip" todir="${ovpnals.home}/conf/repository/archives" />
		<copy file="${build.lib}/JPam-1.1.jar" todir="${ovpnals.home}/lib" />
		<copy file="lib/native/i386/libjpam.so" todir="${java.home}/lib/i386/client" />
		<copy file="lib/native/i386/libjpam.so" todir="${java.home}/lib/i386/server" />
		<copy file="lib/native/amd64/libjpam.so" todir="${java.home}/lib/amd64/server" />
		<copy file="lib/native/amd64/libjpam.so" todir="${java.home}/lib/amd64" />
	</target>
	
	<target name="install-pam-conf">
		<copy file="examples/etc/pam.d/pam.unix" tofile="/etc/pam.d/ovpnals" />
	</target>

	<target name="uninstall">
		<delete file="${ovpnals.home}/conf/repository/archives/${ant.project.name}.zip" />
		<delete file="${ovpnals.home}/lib/JPam-1.1.jar" />
		<delete file="${java.home}/lib/i386/client/libjpam.so" />
		<delete file="${java.home}/lib/i386/server/libjpam.so" />
		<delete file="${java.home}/lib/amd64/server/libjpam.so" />
		<delete file="${java.home}/lib/amd64/libjpam.so" />
	</target>
	
	<target name="ovpnals-install" depends="install">
		<ant inheritall="false" dir="${ovpnals.home}" target="install"></ant>
	</target>
	<target name="ovpnals-start" depends="install">
		<ant inheritall="false" dir="${ovpnals.home}" target="start"></ant>
	</target>
	
</project>
