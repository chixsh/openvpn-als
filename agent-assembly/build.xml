<?xml version="1.0" encoding="UTF-8"?>
<project name="agent" default="assemble" basedir=".">

	<!-- IMPORTANT: Several obsolete things have been removed during
			mavenization:

			* All Java compilation (handled by maven2)
			* All tests (handled by maven2)
			* Building support for MS Java
			* Building CAB version of the launcher
			* Codeswitcher
			* (Separate) debug version of the client.

			Ant is being used because of the overly complex
			and non-standard nature of the Agent build/assembly
			process. We should definitely try to simplify the
			process once the mavenized Agent runs
	-->


	<!-- A temporary directory for the ant assembly process -->
	<property name="build.dir" value="target/ant-build" />

	<!-- Misc stuff required by the extension or the build process -->
	<property name="ant.dir" value="ant" />

	<!-- Dependencies -->
	<property name="maverick-ssl.home" value="../maverick-ssl"/>
	<property name="maverick-crypto.home" value="../maverick-crypto"/>
	<property name="maverick-util.home" value="../maverick-util"/>
	<property name="maverick-multiplex.home" value="../maverick-multiplex"/>

	<!-- Agent modules -->
	<property name="agent.home" value="../agent"/>	
	<property name="agent-swt.home" value="../agent-swt"/>
	<property name="agent-awt.home" value="../agent-awt"/>
	<property name="ui.home" value="../ui"/>

	<!-- Java applet (launcher*.jar) signing -->
	<property name="certificate.home" value="${ant.dir}/certificate"/>
	<property file="${certificate.home}/certificate.properties"/>

	<!-- Convenience paths -->
	<property name="src" value="src/main/java"/>
	<property name="resources" value="src/main/resources"/>
	<property name="classes" value="target/classes"/>
	<property name="dependencies" value="target/dependency"/>

	<target name="assemble" depends="clean">

		<!--====================-->
		<!-- Assemble agent.jar -->
		<!--====================-->

		<mkdir dir="${build.dir}/agent"/>

		<copy todir="${build.dir}/agent">
			<fileset dir="${agent.home}/${classes}">
				<include name="**/*"/>			
			</fileset>
			<fileset dir="${maverick-multiplex.home}/${classes}">
				<include name="**/*"/>		
			</fileset>
		</copy>		

		<jar jarfile="${build.dir}/agent.jar" basedir="${build.dir}/agent">
			<include name="**/*"/>
		</jar>					

		<!--=======================-->
		<!-- Assemble agent-en.jar -->
		<!--=======================-->

		<mkdir dir="${build.dir}/agent-en"/>
		
		<copy todir="${build.dir}/agent-en">
			<fileset dir="${agent.home}/${resources}">
				<include name="**/*.properties"/>		
			</fileset>
			<fileset dir="${agent-awt.home}/${resources}">
				<include name="**/*.properties"/>		
			</fileset>
			<fileset dir="${agent-swt.home}/${resources}">
				<include name="**/*.properties"/>		
			</fileset>
			<fileset dir="${ui.home}/${resources}">
				<include name="**/*.properties"/>		
			</fileset>
		</copy>		

		<jar jarfile="${build.dir}/agent-en.jar" basedir="${build.dir}/agent-en">
			<include name="**/*"/>
		</jar>					

		<!--========================-->
		<!-- Assemble agent-awt.jar -->
		<!--========================-->

		<mkdir dir="${build.dir}/agent-awt"/>

		<copy todir="${build.dir}/agent-awt">
			<fileset dir="${agent-awt.home}/${classes}">
				<include name="**/*"/>			
			</fileset>
			<fileset dir="${agent-awt.home}/${resources}">
				<include name="**/*.gif"/>			
				<include name="**/*.png"/>			
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/agent-awt.jar" basedir="${build.dir}/agent-awt">
			<include name="**/*"/>
		</jar>

		<!--===========================-->
		<!-- Assemble agent-awt-en.jar -->
		<!--===========================-->

		<mkdir dir="${build.dir}/agent-awt-en"/>

		<copy todir="${build.dir}/agent-awt-en">
			<fileset dir="${agent-awt.home}/${resources}">
				<include name="**/*.properties"/>			
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/agent-awt-en.jar" basedir="${build.dir}/agent-awt-en">
			<include name="**/*"/>
		</jar>

		<!--========================-->
		<!-- Assemble agent-swt.jar -->
		<!--========================-->

		<mkdir dir="${build.dir}/agent-swt"/>

		<copy todir="${build.dir}/agent-swt">
			<fileset dir="${agent-swt.home}/${classes}">
				<include name="**/*"/>			
			</fileset>
			<fileset dir="${agent-swt.home}/${resources}">
				<include name="**/*.gif"/>
				<include name="**/*.png"/>
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/agent-swt.jar" basedir="${build.dir}/agent-swt">
			<include name="**/*"/>
		</jar>


		<!--===========================-->
		<!-- Assemble agent-swt-en.jar -->
		<!--===========================-->

		<mkdir dir="${build.dir}/agent-swt-en"/>

		<copy todir="${build.dir}/agent-swt-en">
			<fileset dir="${agent-swt.home}/${resources}">
				<include name="**/*.properties"/>			
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/agent-swt-en.jar" basedir="${build.dir}/agent-swt-en">
			<include name="**/*"/>
		</jar>


		<!--=======================-->
		<!-- Assemble launcher.jar -->
		<!--=======================-->

		<mkdir dir="${build.dir}/launcher"/>

		<copy todir="${build.dir}/launcher">
			<fileset dir="${agent.home}/${classes}">
				<include name="com/adito/agent/client/launcher/**"/>			
				<include name="com/adito/agent/client/util/**"/>			
			</fileset>
			<fileset dir="${ui.home}/${classes}">
				<include name="com/sshtools/ui/awt/options/**"/>
				<!-- Why only these classes were included? -->			
				<include name="com/sshtools/ui/awt/ImageCanvas.class"/>			
				<include name="com/sshtools/ui/awt/Messages.class"/>			
				<include name="com/sshtools/ui/awt/MultilineLabel.class"/>			
				<include name="com/sshtools/ui/awt/UIUtil.class"/>			
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/launcher.jar" basedir="${build.dir}/launcher">
			<include name="**/*"/>
		</jar>

		<!-- We need to sign this Java applet -->

		<signjar jar="${build.dir}/launcher.jar"
			alias="${certificate.alias}"
			keystore="${certificate.home}/${certificate.keystore}"
			storetype="${certificate.storetype}"
			storepass="${certificate.password}"/>



		<!--===========================-->
		<!-- Assemble launcher-en.jar -->
		<!--===========================-->

		<mkdir dir="${build.dir}/launcher-en"/>

		<copy todir="${build.dir}/launcher-en">
			<fileset dir="${agent.home}/${resources}">
				<include name="com/adito/agent/client/launcher/**"/>			
				<include name="com/adito/agent/client/util/**"/>			
			</fileset>
			<fileset dir="${ui.home}/${resources}">
				<include name="com/sshtools/ui/awt/options/**"/>
				<include name="com/sshtools/ui/awt/*.properties"/>
			</fileset>
		</copy>

		<jar jarfile="${build.dir}/launcher-en.jar" basedir="${build.dir}/launcher-en">
			<include name="**/*"/>
		</jar>

		<signjar jar="${build.dir}/launcher-en.jar"
			alias="${certificate.alias}"
			keystore="${certificate.home}/${certificate.keystore}"
			storetype="${certificate.storetype}"
			storepass="${certificate.password}"/>


		<!--========================-->
		<!-- Assemble swt-linux.jar -->
		<!--========================-->


		<!-- The only difference between swt-linux, swt-macosx and swt-win32
		     seems to be a handful of files in org.eclipse.swt.internal. To
		     reduce complexity we include all files in that namespace, used
		     or not. In addition, the extension package contains some
		     native libraries for each platform -->
 
		<mkdir dir="${build.dir}/swt-all"/>

		<copy todir="${build.dir}/swt-all">
			<fileset dir="${agent-swt.home}/${dependencies}">
				<include name="org/eclipse/swt/**"/>			
			</fileset>
		</copy>		

		<jar jarfile="${build.dir}/swt-linux.jar" basedir="${build.dir}/swt-all">
			<include name="**/*"/>
		</jar>					
		<jar jarfile="${build.dir}/swt-macosx.jar" basedir="${build.dir}/swt-all">
			<include name="**/*"/>
		</jar>					
		<jar jarfile="${build.dir}/swt-win32.jar" basedir="${build.dir}/swt-all">
			<include name="**/*"/>
		</jar>					

		

		<!--=================-->
		<!-- Assemble ui.jar -->
		<!--=================-->

		<mkdir dir="${build.dir}/ui"/>

		<copy todir="${build.dir}/ui">
			<fileset dir="${ui.home}/${classes}">
				<include name="com/sshtools/ui/*.class"/>			
				<include name="com/sshtools/ui/awt/**"/>			
				<include name="com/sshtools/util/**"/>			
			</fileset>
		</copy>		

		<jar jarfile="${build.dir}/ui.jar" basedir="${build.dir}/ui">
			<include name="**/*"/>
		</jar>					







	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>


<!-- EVERYTHING BELOW THIS LINE IS OBSOLETE AND USED ONLY FOR REFERENCE PURPOSES -->

<!-- Agent Java version was changed prior to the ant build:

	<replace file="${build.tmp}/com/adito/agent/client/Agent.java" 
		token="999.999.999" value="${bundle(version)}"/>

-->


<!-- Checksum the archive

	<target name="release" depends="build">
	
		<mkdir dir="${build.release}"/>
		<zip destfile="${build.release}/${ant.project.name}.zip">
			<zipfileset dir="${build.extension}" prefix="${ant.project.name}">
				<include name="**/*"/>
			</zipfileset>
		
		<checksum>
			<fileset dir="${build.release}">
				<include name="*.zip"/>
			</fileset>
		</checksum>
	</target>
	
-->

<!-- Signing the applets is done with signJar, see trunk -->

</project>
